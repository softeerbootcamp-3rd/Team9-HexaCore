name: Build & Deploy Spring Boot Application

on:
  push:
    branches: [ "feat#23" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Move to server directory
        run: cd server

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest

  # deploy:
  #   needs: build

  #   runs-on: ubuntu-20.04

  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ap-northeast-2

  #     - name: Deploy
  #       uses: appleboy/ssh-action@v0.1.6
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         port: 22
  #         username: ${{ secrets.EC2_USERNAME }}
  #         key: ${{ secrets.EC2_PRIVATE_KEY }}
  #         script: |
  #           docker stop $(docker ps -a -q)
  #           docker rm $(docker ps -a -q -f status=exited)
  #           docker rm $(docker ps -a -q -f status=created)
  #           docker rmi $(docker images -q)
  #           docker pull ${{ secrets.DOCKER_REPO }}
  #           docker run -d -p 443:80 -p 80:80 -v /home/${{ secrets.EC2_USERNAME }}/data:/data ${{ secrets.DOCKER_REPO }} --name tayoServer
